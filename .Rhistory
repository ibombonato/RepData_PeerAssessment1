addMeanByInterval <- function(x){
steps_by_interval$stepsMean[steps_by_interval$stepsMean == x, 1]
#steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
}
addMeanByInterval(2355)
head(steps_by_interval)
head(missingData)
addMeanByInterval <- function(x){
1
}
apply(missingData, 1, addMeanByInterval)
addMeanByInterval <- function(x){
print(x)
1
}
apply(missingData, 1, addMeanByInterval)
addMeanByInterval <- function(x){
x$steps = 1
}
apply(missingData, 1, addMeanByInterval)
head(apply(missingData, 1, addMeanByInterval))
mutate(missingData, steps = addMeanByInterval(interval))
mutate(missingData, steps = addMeanByInterval)
head(missingData)
head(mutate(missingData, stepsNovo = addMeanByInterval(interval))
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
steps_by_interval %>% filter(interval == x$interval) %>% select(stepsMean)
#x$steps = 1
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
#x$steps = 1
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
steps_by_interval[steps_by_interval$interval == x]
#steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
#x$steps = 1
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
#steps_by_interval[steps_by_interval$interval == x]
#steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
#x$steps = 1
10
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
#steps_by_interval[steps_by_interval$interval == x]
#steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x))
10
}
addMeanByInterval <- function(x){
#steps_by_interval[steps_by_interval$interval == x]
#steps_by_interval %>% filter(interval == x) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
10
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x){
#steps_by_interval[steps_by_interval$interval == x]
y <- steps_by_interval %>% filter(interval == as.character(x)) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
10
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval)))
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
y <- d %>% filter(interval == as.character(x)) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
10
}
head(mutate(missingData, stepsNovo = addMeanByInterval(interval, steps_by_interval)))
head(mutate(missingData, stepsNovo = addMeanByInterval(0, steps_by_interval)))
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
y <- d %>% filter(interval == as.character(x)) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
y
}
head(mutate(missingData, stepsNovo = addMeanByInterval(0, steps_by_interval)))
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
y <- d %>% filter(interval == as.character(x)) %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
as.numeric(y)
}
head(mutate(missingData, stepsNovo = addMeanByInterval(0, steps_by_interval)))
head(mutate(missingData, stepsNovo = addMeanByInterval(5, steps_by_interval)))
head(mutate(missingData, stepsNovo = addMeanByInterval(as.numeric(interval), steps_by_interval)))
missingData %>% rowwise() %>% mutate(missingData, stepsNovo = addMeanByInterval(interval, steps_by_interval))
missingData %>% rowwise() %>% do(newSteps = addMeanByInterval(interval, steps_by_interval)) %>% mutate(newSteps = c(stepsNovo))
missingData %>% mutate(newSteps = sapply(interval, addMeanByInterval(interval, steps_by_interval))
missingData %>% mutate(newSteps = sapply(interval, addMeanByInterval(interval, steps_by_interval)))
sapply(missingData, x = interval, FUN = addMeanByInterval)
sapply(missingData, x = interval, FUN = addMeanByInterval(x, steps_by_interval))
sapply(missingData, x = interval, FUN = addMeanByInterval(interval, steps_by_interval))
sapply(missingData, x = missingData$interval, FUN = addMeanByInterval(missingData$interval, steps_by_interval))
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
z <- as.character(x)
y <- d %>% filter(interval == z %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
as.numeric(y)
}
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
z <- as.character(x)
y <- d %>% filter(interval == z %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
as.numeric(y)
}
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
z <- as.character(x)
y <- d %>% filter(interval == z %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
as.numeric(y)
}
addMeanByInterval <- function(x, d){}
addMeanByInterval <- function(x, d){
#steps_by_interval[steps_by_interval$interval == x]
z <- as.character(x)
y <- d %>% filter(interval == z %>% select(stepsMean)
#x$steps = 1
print(paste('Valor de x:', as.character(x)))
print(paste('Valor de y:', as.character(y)))
as.numeric(y)
}
addMeanByInterval(2355)
missingData[1]$steps <- steps_by_interval %>%
filter(interval == missingData[1]$interval %>%
select(stepsMean)
head(missingData)
head(missingData)
missingData[1]$steps <- steps_by_interval %>%
filter(interval == missingData[1]$interval %>%
select(stepsMean)
missingData[1]$steps <- steps_by_interval %>%
filter(interval == missingData[1]$interval) %>%
select(stepsMean)
steps_by_interval %>%
filter(interval == missingData[1]$interval) %>%
select(stepsMean)
missingData[1]$interval
head(missingData)
missingData[1]$interval
missingData[2]$interval
missingData[3]$interval
missingData <- data[!complete.cases(data),]
missingData[3]$interval
missingData[[3]$interval
missingData[[3]]$interval
missingData[[3]]
head(missingData)
missingData[1,3]
steps_by_interval %>%
filter(interval == missingData[1,3]) %>%
select(stepsMean)
missingData[1]$steps <- steps_by_interval %>%
filter(interval == missingData[1,3]) %>%
select(stepsMean)
missingData[1, 1] <- steps_by_interval %>%
filter(interval == missingData[1,3]) %>%
select(stepsMean)
head(missingData)
for (i:nrow(missingData)){
missingData[i, 1] <- steps_by_interval %>%
filter(interval == missingData[i,3]) %>%
select(stepsMean)
}
for (var i in i:nrow(missingData)){
missingData[i, 1] <- steps_by_interval %>%
filter(interval == missingData[i,3]) %>%
select(stepsMean)
}
nrow(missingData)
for (i in i:nrow(missingData)){
missingData[i, 1] <- steps_by_interval %>%
filter(interval == missingData[i,3]) %>%
select(stepsMean)
}
for (i in 1:nrow(missingData)){
missingData[i, 1] <- steps_by_interval %>%
filter(interval == missingData[i,3]) %>%
select(stepsMean)
}
head(missingData)
missingData <- data[!complete.cases(data),]
for (i in 1:nrow(missingData)){
missingData[i, 1] <- steps_by_interval %>%
filter(interval == missingData[i,3]) %>%
select(stepsMean)
}
df <- rbind(data[complete.cases(data),], missingData)
head(df)
sum(complete.cases(df))
sum(!complete.cases(df))
steps_by_day <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
mean(steps_by_day$steps, na.rm = TRUE)
median(steps_by_day$steps, na.rm = TRUE)
View(steps_by_day)
View(steps_by_day)
mfcol(2)
opar <- par()
par(opar)
par(opar)
par(mfcol = 2)
par(mfrow = 1,1)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfrow = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfrow = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfcol = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfcol = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfcol = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, main = "Histogram of steps per day", xlab="Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, main = "Histogram of steps per day", xlab="Steps")
par(mfcol = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps)
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps)
par(mfrow = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps)
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps)
par(mfrow = c(2,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps)
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps)
par(mfrow = c(2,1))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps)
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps)
par(mfrow = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps)
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps)
par(mfrow = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, ylim = 38, xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = 38, xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = 38, xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = 100, xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, xlim = 100, xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = c(0, 40), xlab = "Steps")
# What is the impact of imputing missing data on the estimates of the total daily
# number of steps?
par(mfrow = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, ylim = c(0, 40), xlab = "Steps")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = c(0, 40), xlab = "Steps")
par(mfrow = c(1,2))
steps_by_day <- data %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day$steps, ylim = c(0, 40), xlab = "Steps", main = "Original values")
steps_by_day_complete <- df %>% na.omit() %>% group_by(date) %>% summarise(steps = sum(steps))
hist(steps_by_day_complete$steps, ylim = c(0, 40), xlab = "Steps", main = "Replaced NAs")
mean(steps_by_day$steps, na.rm = TRUE)
median(steps_by_day$steps, na.rm = TRUE)
mean(steps_by_day_complete$steps, na.rm = TRUE)
median(steps_by_day_complete$steps, na.rm = TRUE)
library(lubridate)
str(df)
df$date <- ymd(df$date)
wday("2012-10-01")
wday("2012-10-01") %in% c(1,2)
mutate(df, weekday = ifelse(wday(date)  %in% c(1,2), yes = "weekend", no = "weekday" ))
df <- mutate(df, weekday = ifelse(wday(date)  %in% c(1,2), yes = "weekend", no = "weekday" ))
View(df)
par(mfcol = c(1, 2))
df %>% select(steps, interval, weekday) %>% group_by(weekday, interval)
df %>% select(steps, interval, weekday) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps))
group_by_weekday <- df %>% select(steps, interval, weekday) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps))
dfWeekend <- filter(group_by_weekday, weekday == "weekend")
dfWeekday <- filter(group_by_weekday, weekday == "weekday")
par(mfcol = c(1, 2))
plot(x = dfWeekend$interval, y = dfWeekend$stepsMean,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Mean of Steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$stepsMean,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Mean of Steps",
xlab = "Interval")
head(dfWeekend)
par(mfcol = c(1, 2))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Mean of Steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Mean of Steps",
xlab = "Interval")
par(mfcol = c(2, 1))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Mean of Steps",
xlab = "Interval")
par(mfcol = c(2, 1), mar = rep(2, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Mean of Steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Mean of Steps",
xlab = "Interval")
str(df)
df <- mutate(df, weekday = ifelse(wday(date)  %in% c(1,2), yes = as.factor("weekend"), no = as.factor("weekday"))
df <- mutate(df, weekday =
ifelse(wday(date)  %in% c(1,2),
yes = as.factor("weekend"),
no = as.factor("weekday")
))
str(df)
df <- mutate(df, weekday =
ifelse(wday(date)  %in% c(1,2),
yes = factor("weekend"),
no = factor("weekday")
))
str(df)
head(df)
df <- mutate(df, weekday =
ifelse(wday(date)  %in% c(1,2),
yes = "weekend",
no = "weekday"
))
str(df)
df$weekday = as.factor(df$weekday)
head(df)
str(df)
group_by_weekday <- df %>% select(steps, interval, weekday) %>%
group_by(weekday, interval) %>% summarise(steps = mean(steps))
dfWeekend <- filter(group_by_weekday, weekday == "weekend")
dfWeekday <- filter(group_by_weekday, weekday == "weekday")
par(mfcol = c(2, 1), mar = rep(2, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Mean of Steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Mean of Steps",
xlab = "Interval")
par(mfcol = c(2, 1), mar = rep(2, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
par(mfcol = c(2, 1), mar = rep(4, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
par(mfcol = c(2, 1), mar = rep(1, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
par(mfcol = c(2, 1), mar = rep(2, 4))
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
par(mfcol = c(2, 1), mar=c(5, 6, 4, 2) + 0.1)
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
par(mfcol = c(2, 1), mar=c(2, 2, 2, 2) + 0.1)
plot(x = dfWeekend$interval, y = dfWeekend$steps,
type = "l" , main = "Average steps by interval(Weekend)",
ylab = "Number of steps",
xlab = "Interval")
plot(x = dfWeekday$interval, y = dfWeekday$steps,
type = "l" , main = "Average steps by interval(Weekday)",
ylab = "Number of teps",
xlab = "Interval")
library(ggplot2)
library(ggplot2)
ggplot(df, aes (x = interval, y = steps) +
geom_line() +
facet_grid(.~weekday) +
labs(y = "Number of steps", x = "Interval") +
labs(title = "Steps per interval")
)
ggplot(df, aes (x = interval, y = steps) +
geom_line() +
facet_grid(.~weekday) +
labs(y = "Number of steps", x = "Interval") +
labs(title = "Steps per interval"))
ggplot(df, aes (x = interval, y = steps, group = weekday) +
geom_line() +
facet_grid(.~weekday) +
labs(y = "Number of steps", x = "Interval") +
labs(title = "Steps per interval"))
head(df)
ggplot(df, aes (x = interval, y = steps) +
geom_line() +
facet_grid(.~weekday) +
labs(y = "Number of steps", x = "Interval") +
labs(title = "Steps per interval"))
ggplot(df, aes (x = interval, y = steps) +
geom_line() +
#facet_grid(.~weekday) +
labs(y = "Number of steps", x = "Interval") +
labs(title = "Steps per interval"))
head(df)
ggplot(df, aes (x = interval, y = steps))
ggplot(df, aes (x = interval, y = steps)) + geom_line()
ggplot(df, aes (x = interval, y = steps)) + geom_line() + facet_grid(~.weekday)
ggplot(df, aes (x = interval, y = steps)) + geom_line() + facet_grid(.~weekday)
ggplot(dfWeekend, aes (x = interval, y = steps, group=)) + geom_line()
head(dfWeekend)
ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line()
ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
p <- ggplot() +
# blue plot
ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line()
# red plot
ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
print(p)
ggplot() +
# blue plot
ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line()
# red plot
ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
ggplot() +
# blue plot
ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line()
# red plot
ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
ggplot() +
# blue plot
ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line() +
# red plot
ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
p1 <- ggplot(dfWeekend, aes (x = interval, y = steps)) + geom_line()
p2 <- ggplot(dfWeekday, aes (x = interval, y = steps)) + geom_line()
arrange_ggplot2(p1,p2,ncol=1)
